/// <reference types="node" />
import { TeaError } from "../utils/error.js";
import Path from "../utils/Path.js";
import "../utils/misc.js";
interface DownloadOptions {
    src: URL;
    dst?: Path;
    headers?: Record<string, string>;
    logger?: (info: {
        src: URL;
        dst: Path;
        rcvd?: number;
        total?: number;
    }) => void;
}
export declare class DownloadError extends TeaError {
    status: number;
    src: URL;
    headers?: Record<string, string>;
    constructor(status: number, opts: {
        src: URL;
        headers?: Record<string, string>;
    });
}
declare function download(opts: DownloadOptions, chunk?: (blob: Uint8Array) => Promise<void>): Promise<Path>;
declare function cache({ for: url }: {
    for: URL;
}): Path;
export default function useDownload(): {
    download: typeof download;
    cache: typeof cache;
};
export {};
