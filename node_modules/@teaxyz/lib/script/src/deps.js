"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deno = exports.outdent = exports.is_what = void 0;
const is_what = __importStar(require("is-what"));
exports.is_what = is_what;
const outdent = __importStar(require("outdent"));
exports.outdent = outdent;
// importing super specifically to reduce final npm bundle size
const crypto = __importStar(require("../deps/deno.land/std@0.193.0/crypto/mod.js"));
const move_js_1 = require("../deps/deno.land/std@0.193.0/fs/move.js");
const read_lines_js_1 = require("../deps/deno.land/std@0.193.0/io/read_lines.js");
const write_all_js_1 = require("../deps/deno.land/std@0.193.0/streams/write_all.js");
const parse_js_1 = require("../deps/deno.land/std@0.193.0/yaml/parse.js");
const streams = { writeAll: write_all_js_1.writeAll };
const io = { readLines: read_lines_js_1.readLines };
const fs = { moveSync: move_js_1.moveSync };
const deno = { readLines: read_lines_js_1.readLines, crypto, fs, io, streams, parseYaml: parse_js_1.parse };
exports.deno = deno;
