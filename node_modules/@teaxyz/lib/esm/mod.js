import "./_dnt.polyfills.js";
import "./src/utils/misc.js";
import { flatmap, validate } from "./src/utils/misc.js";
import host from "./src/utils/host.js";
import SemVer, * as semver from "./src/utils/semver.js";
import Path from "./src/utils/Path.js";
export * as types from "./src/types.js";
import * as pkg from "./src/utils/pkg.js";
import { panic, TeaError } from "./src/utils/error.js";
import useConfig from "./src/hooks/useConfig.js";
import useOffLicense from "./src/hooks/useOffLicense.js";
import useCache from "./src/hooks/useCache.js";
import useCellar, { InstallationNotFoundError } from "./src/hooks/useCellar.js";
import useMoustaches from "./src/hooks/useMoustaches.js";
import usePantry, { PantryError, PantryParseError, PantryNotFoundError, PackageNotFoundError } from "./src/hooks/usePantry.js";
import useFetch from "./src/hooks/useFetch.js";
import useDownload, { DownloadError } from "./src/hooks/useDownload.js";
import useShellEnv from "./src/hooks/useShellEnv.js";
import useInventory from "./src/hooks/useInventory.js";
import hydrate from "./src/plumbing/hydrate.js";
import which from "./src/plumbing/which.js";
import link from "./src/plumbing/link.js";
import install, { ConsoleLogger } from "./src/plumbing/install.js";
import resolve, { ResolveError } from "./src/plumbing/resolve.js";
import { validatePackageRequirement } from "./src/utils/hacks.js";
import useSync from "./src/hooks/useSync.js";
import run, { RunError } from "./src/porcelain/run.js";
import porcelain_install from "./src/porcelain/install.js";
const utils = {
    pkg, host, flatmap, validate, panic, ConsoleLogger
};
const hooks = {
    useCache,
    useCellar,
    useConfig,
    useDownload,
    useFetch,
    useInventory,
    useMoustaches,
    useOffLicense,
    usePantry,
    useShellEnv,
    useSync,
};
const plumbing = {
    hydrate,
    link,
    install,
    resolve,
    which
};
const porcelain = {
    install: porcelain_install,
    run
};
const hacks = {
    validatePackageRequirement
};
export { utils, hooks, plumbing, porcelain, hacks, semver, TeaError, RunError, ResolveError, PantryError, PantryParseError, PantryNotFoundError, PackageNotFoundError, InstallationNotFoundError, DownloadError };
/// export types
// we cannot add these to the above objects or they cannot be used as types
export { Path, SemVer };
export * from "./src/types.js";
