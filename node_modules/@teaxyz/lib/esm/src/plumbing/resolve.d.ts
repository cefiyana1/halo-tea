import { Package, PackageRequirement, Installation } from "../types.js";
import useInventory from "../hooks/useInventory.js";
import useCellar from "../hooks/useCellar.js";
import { TeaError } from "../utils/error.js";
export interface Resolution {
    pkgs: Package[];
    installed: Installation[];
    pending: Package[];
}
export declare class ResolveError extends TeaError {
    pkg: Package | PackageRequirement;
    constructor(pkg: Package | PackageRequirement);
}
export default function resolve(reqs: (Package | PackageRequirement)[], { update }?: {
    update: boolean;
}): Promise<Resolution>;
export declare const _internals: {
    useInventory: typeof useInventory;
    useCellar: typeof useCellar;
};
